node('master') {
    checkout scm
    // Load the file 'pipelineTrace.groovy' from the current directory, into a variable called "externalMethod".
    def trace = load("pipelineTrace.groovy")
    
    
//	def config = load("loadConfig.groovy")

    def WORKSPACE = "${env.WORKSPACE}"

//    def myEnv = config.loadConfig()
//	echo "ArtifactFolder== ${myEnv.ArtifactFolder}"           

    trace.startStage(WORKSPACE, "${env.BUILD_NUMBER}",  "${env.GIT_BRANCH}", 'Pipeline')

    def nugent = load("_nugent")

    stage('Build') {
       trace.startStage(WORKSPACE, "${env.BUILD_NUMBER}",  "${env.GIT_BRANCH}", 'BUILD')

		try{
          
          nugent.executeMSBuild('${Package_type}')

          def logstash = load("_logstash")
		  logstash.copyLogFiles()
		}
		catch(err){
		   throw err
		}
		finally{
		  trace.endStage(WORKSPACE, "${env.BUILD_NUMBER}",  "${env.GIT_BRANCH}", 'BUILD')
		}
    }

    stage('Code Coverage') {
        trace.startStage("${env.WORKSPACE}", "${env.BUILD_NUMBER}",  "${env.GIT_BRANCH}", 'Code Coverage')

        nugent.executeMSBuild('${Package_type}')

        trace.endStage("${env.WORKSPACE}", "${env.BUILD_NUMBER}",  "${env.GIT_BRANCH}", 'Code Coverage')
    }

//    stage('Code Analysis') {
//        trace.startStage("${env.WORKSPACE}", "${env.BUILD_NUMBER}",  "${env.GIT_BRANCH}", 'Code Analysis')
//
//        //  IMPLEMENT THIS
//
//        trace.endStage("${env.WORKSPACE}", "${env.BUILD_NUMBER}",  "${env.GIT_BRANCH}", 'Code Analysis')
//    }
//
//    stage('Install Package') {
//        trace.startStage("${env.WORKSPACE}", "${env.BUILD_NUMBER}",  "${env.GIT_BRANCH}", 'Install Package')
//
//        //  IMPLEMENT THIS
//
//        trace.endStage("${env.WORKSPACE}", "${env.BUILD_NUMBER}",  "${env.GIT_BRANCH}", 'Install Package')
//    }
//
//    stage('Artifact Upload') {
//        trace.startStage("${env.WORKSPACE}", "${env.BUILD_NUMBER}",  "${env.GIT_BRANCH}", 'Artifact Upload')
//
//        //  IMPLEMENT THIS
//
//        trace.endStage("${env.WORKSPACE}", "${env.BUILD_NUMBER}",  "${env.GIT_BRANCH}", 'Artifact Upload')
//    }
//
//    stage('Deployment to DEV') {
//        trace.startStage("${env.WORKSPACE}", "${env.BUILD_NUMBER}",  "${env.GIT_BRANCH}", 'Deployment to DEV')
//        trace.endStage("${env.WORKSPACE}", "${env.BUILD_NUMBER}",  "${env.GIT_BRANCH}", 'Deployment to DEV')
//    }
//
//    stage('Deployment to TEST') {
//        trace.startStage("${env.WORKSPACE}", "${env.BUILD_NUMBER}",  "${env.GIT_BRANCH}", 'Deployment to TEST')
//        trace.endStage("${env.WORKSPACE}", "${env.BUILD_NUMBER}",  "${env.GIT_BRANCH}", 'Deployment to TEST')
//    }
}
 
def clean(){
    bat '"%powershell%" -ExecutionPolicy ByPass -File %delete_folder% -DIRECTORY %ARTIFACT_PATH%'
    bat '"%powershell%" -ExecutionPolicy ByPass -File %delete_folder% -DIRECTORY %PACKAGE_PATH%'
}
